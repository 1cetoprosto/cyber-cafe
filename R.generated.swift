//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle
  var string: string { .init(bundle: bundle, preferredLanguages: nil, locale: nil) }
  var color: color { .init(bundle: bundle) }
  var image: image { .init(bundle: bundle) }
  var info: info { .init(bundle: bundle) }
  var file: file { .init(bundle: bundle) }

  func string(bundle: Foundation.Bundle) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: nil)
  }
  func string(locale: Foundation.Locale) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: locale)
  }
  func string(preferredLanguages: [String], locale: Locale? = nil) -> string {
    .init(bundle: bundle, preferredLanguages: preferredLanguages, locale: locale)
  }
  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func info(bundle: Foundation.Bundle) -> info {
    .init(bundle: bundle)
  }
  func file(bundle: Foundation.Bundle) -> file {
    .init(bundle: bundle)
  }
  func validate() throws {

  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.string` struct is generated, and contains static references to 2 localization tables.
  struct string {
    let bundle: Foundation.Bundle
    let preferredLanguages: [String]?
    let locale: Locale?
    var auth: auth { .init(source: .init(bundle: bundle, tableName: "Auth", preferredLanguages: preferredLanguages, locale: locale)) }
    var global: global { .init(source: .init(bundle: bundle, tableName: "Global", preferredLanguages: preferredLanguages, locale: locale)) }

    func auth(preferredLanguages: [String]) -> auth {
      .init(source: .init(bundle: bundle, tableName: "Auth", preferredLanguages: preferredLanguages, locale: locale))
    }
    func global(preferredLanguages: [String]) -> global {
      .init(source: .init(bundle: bundle, tableName: "Global", preferredLanguages: preferredLanguages, locale: locale))
    }


    /// This `_R.string.auth` struct is generated, and contains static references to 21 localization keys.
    struct auth {
      let source: RswiftResources.StringResource.Source

      /// en translation: To authorize in the app
      ///
      /// Key: bioAuthReason
      ///
      /// Locales: uk, en
      var bioAuthReason: RswiftResources.StringResource { .init(key: "bioAuthReason", tableName: "Auth", source: source, developmentValue: "To authorize in the app", comment: nil) }

      /// en translation: Please confirm your email address
      ///
      /// Key: confirmEmail
      ///
      /// Locales: uk, en
      var confirmEmail: RswiftResources.StringResource { .init(key: "confirmEmail", tableName: "Auth", source: source, developmentValue: "Please confirm your email address", comment: nil) }

      /// en translation: Enable %@
      ///
      /// Key: enableBioAuth
      ///
      /// Locales: uk, en
      var enableBioAuth: RswiftResources.StringResource1<String> { .init(key: "enableBioAuth", tableName: "Auth", source: source, developmentValue: "Enable %@", comment: nil) }

      /// en translation: Enable later in settings
      ///
      /// Key: enableBioLater
      ///
      /// Locales: uk, en
      var enableBioLater: RswiftResources.StringResource { .init(key: "enableBioLater", tableName: "Auth", source: source, developmentValue: "Enable later in settings", comment: nil) }

      /// en translation: Enter email
      ///
      /// Key: enterEmail
      ///
      /// Locales: uk, en
      var enterEmail: RswiftResources.StringResource { .init(key: "enterEmail", tableName: "Auth", source: source, developmentValue: "Enter email", comment: nil) }

      /// en translation: Forgot password?
      ///
      /// Key: forgotPass
      ///
      /// Locales: uk, en
      var forgotPass: RswiftResources.StringResource { .init(key: "forgotPass", tableName: "Auth", source: source, developmentValue: "Forgot password?", comment: nil) }

      /// en translation: Remember me
      ///
      /// Key: rememberMe
      ///
      /// Locales: uk, en
      var rememberMe: RswiftResources.StringResource { .init(key: "rememberMe", tableName: "Auth", source: source, developmentValue: "Remember me", comment: nil) }

      /// en translation: Repeat password
      ///
      /// Key: repeatPassword
      ///
      /// Locales: uk, en
      var repeatPassword: RswiftResources.StringResource { .init(key: "repeatPassword", tableName: "Auth", source: source, developmentValue: "Repeat password", comment: nil) }

      /// en translation: Reset password
      ///
      /// Key: resetPassword
      ///
      /// Locales: uk, en
      var resetPassword: RswiftResources.StringResource { .init(key: "resetPassword", tableName: "Auth", source: source, developmentValue: "Reset password", comment: nil) }

      /// en translation: We sent you an email with authorization link
      ///
      /// Key: sentAuthEmail
      ///
      /// Locales: uk, en
      var sentAuthEmail: RswiftResources.StringResource { .init(key: "sentAuthEmail", tableName: "Auth", source: source, developmentValue: "We sent you an email with authorization link", comment: nil) }

      /// en translation: Enter password
      ///
      /// Key: setPassword.EnterPassword
      ///
      /// Locales: uk, en
      var setPasswordEnterPassword: RswiftResources.StringResource { .init(key: "setPassword.EnterPassword", tableName: "Auth", source: source, developmentValue: "Enter password", comment: nil) }

      /// en translation: Passwords must match
      ///
      /// Key: setPassword.EqualPasswords
      ///
      /// Locales: uk, en
      var setPasswordEqualPasswords: RswiftResources.StringResource { .init(key: "setPassword.EqualPasswords", tableName: "Auth", source: source, developmentValue: "Passwords must match", comment: nil) }

      /// en translation: New password
      ///
      /// Key: setPassword.Placeholder
      ///
      /// Locales: uk, en
      var setPasswordPlaceholder: RswiftResources.StringResource { .init(key: "setPassword.Placeholder", tableName: "Auth", source: source, developmentValue: "New password", comment: nil) }

      /// en translation: Enter password again
      ///
      /// Key: setPassword.ReEnterPassword
      ///
      /// Locales: uk, en
      var setPasswordReEnterPassword: RswiftResources.StringResource { .init(key: "setPassword.ReEnterPassword", tableName: "Auth", source: source, developmentValue: "Enter password again", comment: nil) }

      /// en translation: Repeat new password
      ///
      /// Key: setPassword.RePlaceholder
      ///
      /// Locales: uk, en
      var setPasswordRePlaceholder: RswiftResources.StringResource { .init(key: "setPassword.RePlaceholder", tableName: "Auth", source: source, developmentValue: "Repeat new password", comment: nil) }

      /// en translation: Please enter new password
      ///
      /// Key: setPassword.Title
      ///
      /// Locales: uk, en
      var setPasswordTitle: RswiftResources.StringResource { .init(key: "setPassword.Title", tableName: "Auth", source: source, developmentValue: "Please enter new password", comment: nil) }

      /// en translation: Password must contain at least 6 characters
      ///
      /// Key: setPassword.ValidLength
      ///
      /// Locales: uk, en
      var setPasswordValidLength: RswiftResources.StringResource { .init(key: "setPassword.ValidLength", tableName: "Auth", source: source, developmentValue: "Password must contain at least 6 characters", comment: nil) }

      /// en translation: Sign In
      ///
      /// Key: signIn
      ///
      /// Locales: uk, en
      var signIn: RswiftResources.StringResource { .init(key: "signIn", tableName: "Auth", source: source, developmentValue: "Sign In", comment: nil) }

      /// en translation: Sign in as:
      ///
      /// Key: signInHow
      ///
      /// Locales: uk, en
      var signInHow: RswiftResources.StringResource { .init(key: "signInHow", tableName: "Auth", source: source, developmentValue: "Sign in as:", comment: nil) }

      /// en translation: Sign Up
      ///
      /// Key: signUp
      ///
      /// Locales: uk, en
      var signUp: RswiftResources.StringResource { .init(key: "signUp", tableName: "Auth", source: source, developmentValue: "Sign Up", comment: nil) }

      /// en translation: Use %@ for quick authorization
      ///
      /// Key: useBioAuth
      ///
      /// Locales: uk, en
      var useBioAuth: RswiftResources.StringResource1<String> { .init(key: "useBioAuth", tableName: "Auth", source: source, developmentValue: "Use %@ for quick authorization", comment: nil) }
    }

    /// This `_R.string.global` struct is generated, and contains static references to 184 localization keys.
    struct global {
      let source: RswiftResources.StringResource.Source

      /// en translation: Please provide access to your %@
      ///
      /// Key: access_image_desc
      ///
      /// Locales: en, uk
      var access_image_desc: RswiftResources.StringResource1<String> { .init(key: "access_image_desc", tableName: "Global", source: source, developmentValue: "Please provide access to your %@", comment: nil) }

      /// en translation: Access to the %@
      ///
      /// Key: access_image_title
      ///
      /// Locales: en, uk
      var access_image_title: RswiftResources.StringResource1<String> { .init(key: "access_image_title", tableName: "Global", source: source, developmentValue: "Access to the %@", comment: nil) }

      /// en translation: OK
      ///
      /// Key: actionOk
      ///
      /// Locales: en, uk
      var actionOk: RswiftResources.StringResource { .init(key: "actionOk", tableName: "Global", source: source, developmentValue: "OK", comment: nil) }

      /// en translation: Add admin
      ///
      /// Key: addAdmin
      ///
      /// Locales: en, uk
      var addAdmin: RswiftResources.StringResource { .init(key: "addAdmin", tableName: "Global", source: source, developmentValue: "Add admin", comment: nil) }

      /// en translation: Add moderator responsibilities
      ///
      /// Key: addModerationPrivilege
      ///
      /// Locales: en, uk
      var addModerationPrivilege: RswiftResources.StringResource { .init(key: "addModerationPrivilege", tableName: "Global", source: source, developmentValue: "Add moderator responsibilities", comment: nil) }

      /// en translation: Add waiter
      ///
      /// Key: addTechnician
      ///
      /// Locales: en, uk
      var addTechnician: RswiftResources.StringResource { .init(key: "addTechnician", tableName: "Global", source: source, developmentValue: "Add waiter", comment: nil) }

      /// en translation: Add waiter responsibilities
      ///
      /// Key: addTechnicianPrivilege
      ///
      /// Locales: en, uk
      var addTechnicianPrivilege: RswiftResources.StringResource { .init(key: "addTechnicianPrivilege", tableName: "Global", source: source, developmentValue: "Add waiter responsibilities", comment: nil) }

      /// en translation: Address
      ///
      /// Key: address
      ///
      /// Locales: en, uk
      var address: RswiftResources.StringResource { .init(key: "address", tableName: "Global", source: source, developmentValue: "Address", comment: nil) }

      /// en translation: Has administrator responsibilities
      ///
      /// Key: adminPrivilege
      ///
      /// Locales: en, uk
      var adminPrivilege: RswiftResources.StringResource { .init(key: "adminPrivilege", tableName: "Global", source: source, developmentValue: "Has administrator responsibilities", comment: nil) }

      /// en translation: All Orders
      ///
      /// Key: allOrders
      ///
      /// Locales: en, uk
      var allOrders: RswiftResources.StringResource { .init(key: "allOrders", tableName: "Global", source: source, developmentValue: "All Orders", comment: nil) }

      /// en translation: Allow Calculation
      ///
      /// Key: allowCalculation
      ///
      /// Locales: en, uk
      var allowCalculation: RswiftResources.StringResource { .init(key: "allowCalculation", tableName: "Global", source: source, developmentValue: "Allow Calculation", comment: nil) }

      /// en translation: The current AppleID has no costs for this cafe
      ///
      /// Key: appleHasntPurhcase
      ///
      /// Locales: en, uk
      var appleHasntPurhcase: RswiftResources.StringResource { .init(key: "appleHasntPurhcase", tableName: "Global", source: source, developmentValue: "The current AppleID has no costs for this cafe", comment: nil) }

      /// en translation: You cannot cost a subscription for this cafe from the current AppleID because this AppleID has already been used for another cafe
      ///
      /// Key: appleIDReserved
      ///
      /// Locales: en, uk
      var appleIDReserved: RswiftResources.StringResource { .init(key: "appleIDReserved", tableName: "Global", source: source, developmentValue: "You cannot cost a subscription for this cafe from the current AppleID because this AppleID has already been used for another cafe", comment: nil) }

      /// en translation: Are you sure you want to delete this item?
      ///
      /// Key: areYouSureYouWantToDeleteThisItem
      ///
      /// Locales: en, uk
      var areYouSureYouWantToDeleteThisItem: RswiftResources.StringResource { .init(key: "areYouSureYouWantToDeleteThisItem", tableName: "Global", source: source, developmentValue: "Are you sure you want to delete this item?", comment: nil) }

      /// en translation: Attention
      ///
      /// Key: attention
      ///
      /// Locales: en, uk
      var attention: RswiftResources.StringResource { .init(key: "attention", tableName: "Global", source: source, developmentValue: "Attention", comment: nil) }

      /// en translation: To continue, you need to log in.
      ///
      /// Key: authenticationFailedMessage
      ///
      /// Locales: en, uk
      var authenticationFailedMessage: RswiftResources.StringResource { .init(key: "authenticationFailedMessage", tableName: "Global", source: source, developmentValue: "To continue, you need to log in.", comment: nil) }

      /// en translation: Authentication Failed
      ///
      /// Key: authenticationFailedTitle
      ///
      /// Locales: en, uk
      var authenticationFailedTitle: RswiftResources.StringResource { .init(key: "authenticationFailedTitle", tableName: "Global", source: source, developmentValue: "Authentication Failed", comment: nil) }

      /// en translation: Back
      ///
      /// Key: back
      ///
      /// Locales: en, uk
      var back: RswiftResources.StringResource { .init(key: "back", tableName: "Global", source: source, developmentValue: "Back", comment: nil) }

      /// en translation: Camera
      ///
      /// Key: camera
      ///
      /// Locales: en, uk
      var camera: RswiftResources.StringResource { .init(key: "camera", tableName: "Global", source: source, developmentValue: "Camera", comment: nil) }

      /// en translation: Cancel
      ///
      /// Key: cancel
      ///
      /// Locales: en, uk
      var cancel: RswiftResources.StringResource { .init(key: "cancel", tableName: "Global", source: source, developmentValue: "Cancel", comment: nil) }

      /// en translation: Card
      ///
      /// Key: card
      ///
      /// Locales: en, uk
      var card: RswiftResources.StringResource { .init(key: "card", tableName: "Global", source: source, developmentValue: "Card", comment: nil) }

      /// en translation: Cash
      ///
      /// Key: cash
      ///
      /// Locales: en, uk
      var cash: RswiftResources.StringResource { .init(key: "cash", tableName: "Global", source: source, developmentValue: "Cash", comment: nil) }

      /// en translation: Change
      ///
      /// Key: changeSub
      ///
      /// Locales: en, uk
      var changeSub: RswiftResources.StringResource { .init(key: "changeSub", tableName: "Global", source: source, developmentValue: "Change", comment: nil) }

      /// en translation: Choose type
      ///
      /// Key: chooseType
      ///
      /// Locales: en, uk
      var chooseType: RswiftResources.StringResource { .init(key: "chooseType", tableName: "Global", source: source, developmentValue: "Choose type", comment: nil) }

      /// en translation: Choose
      ///
      /// Key: chose
      ///
      /// Locales: en, uk
      var chose: RswiftResources.StringResource { .init(key: "chose", tableName: "Global", source: source, developmentValue: "Choose", comment: nil) }

      /// en translation: The waiter has several roles, select a role for authorization:
      ///
      /// Key: choseSignInRole
      ///
      /// Locales: en, uk
      var choseSignInRole: RswiftResources.StringResource { .init(key: "choseSignInRole", tableName: "Global", source: source, developmentValue: "The waiter has several roles, select a role for authorization:", comment: nil) }

      /// en translation: clear
      ///
      /// Key: clear
      ///
      /// Locales: en, uk
      var clear: RswiftResources.StringResource { .init(key: "clear", tableName: "Global", source: source, developmentValue: "clear", comment: nil) }

      /// en translation: Confirm
      ///
      /// Key: confirm
      ///
      /// Locales: en, uk
      var confirm: RswiftResources.StringResource { .init(key: "confirm", tableName: "Global", source: source, developmentValue: "Confirm", comment: nil) }

      /// en translation: Contact Information
      ///
      /// Key: contactInfo
      ///
      /// Locales: en, uk
      var contactInfo: RswiftResources.StringResource { .init(key: "contactInfo", tableName: "Global", source: source, developmentValue: "Contact Information", comment: nil) }

      /// en translation: Cost
      ///
      /// Key: cost
      ///
      /// Locales: en, uk
      var cost: RswiftResources.StringResource { .init(key: "cost", tableName: "Global", source: source, developmentValue: "Cost", comment: nil) }

      /// en translation: Date
      ///
      /// Key: costDate
      ///
      /// Locales: en, uk
      var costDate: RswiftResources.StringResource { .init(key: "costDate", tableName: "Global", source: source, developmentValue: "Date", comment: nil) }

      /// en translation: Cost
      ///
      /// Key: costName
      ///
      /// Locales: en, uk
      var costName: RswiftResources.StringResource { .init(key: "costName", tableName: "Global", source: source, developmentValue: "Cost", comment: nil) }

      /// en translation: Enter cost name
      ///
      /// Key: costNamePlaceholder
      ///
      /// Locales: en, uk
      var costNamePlaceholder: RswiftResources.StringResource { .init(key: "costNamePlaceholder", tableName: "Global", source: source, developmentValue: "Enter cost name", comment: nil) }

      /// en translation: Sum:
      ///
      /// Key: costSum
      ///
      /// Locales: en, uk
      var costSum: RswiftResources.StringResource { .init(key: "costSum", tableName: "Global", source: source, developmentValue: "Sum:", comment: nil) }

      /// en translation: Enter cost sum
      ///
      /// Key: costSumPlaceholder
      ///
      /// Locales: en, uk
      var costSumPlaceholder: RswiftResources.StringResource { .init(key: "costSumPlaceholder", tableName: "Global", source: source, developmentValue: "Enter cost sum", comment: nil) }

      /// en translation: Costs
      ///
      /// Key: costs
      ///
      /// Locales: en, uk
      var costs: RswiftResources.StringResource { .init(key: "costs", tableName: "Global", source: source, developmentValue: "Costs", comment: nil) }

      /// en translation: Your current subscription
      ///
      /// Key: currentSubscription
      ///
      /// Locales: en, uk
      var currentSubscription: RswiftResources.StringResource { .init(key: "currentSubscription", tableName: "Global", source: source, developmentValue: "Your current subscription", comment: nil) }

      /// en translation: Dark
      ///
      /// Key: darkThemeName
      ///
      /// Locales: en, uk
      var darkThemeName: RswiftResources.StringResource { .init(key: "darkThemeName", tableName: "Global", source: source, developmentValue: "Dark", comment: nil) }

      /// en translation: Data for the selected date already exists. Open and edit them.
      ///
      /// Key: dataForTheSelectedDateAlreadyExistsOpenAndEditThem
      ///
      /// Locales: en, uk
      var dataForTheSelectedDateAlreadyExistsOpenAndEditThem: RswiftResources.StringResource { .init(key: "dataForTheSelectedDateAlreadyExistsOpenAndEditThem", tableName: "Global", source: source, developmentValue: "Data for the selected date already exists. Open and edit them.", comment: nil) }

      /// en translation: Default
      ///
      /// Key: defaultOrderType
      ///
      /// Locales: en, uk
      var defaultOrderType: RswiftResources.StringResource { .init(key: "defaultOrderType", tableName: "Global", source: source, developmentValue: "Default", comment: nil) }

      /// en translation: Delete
      ///
      /// Key: delete
      ///
      /// Locales: en, uk
      var delete: RswiftResources.StringResource { .init(key: "delete", tableName: "Global", source: source, developmentValue: "Delete", comment: nil) }

      /// en translation: Delete Account
      ///
      /// Key: delete_account
      ///
      /// Locales: en, uk
      var delete_account: RswiftResources.StringResource { .init(key: "delete_account", tableName: "Global", source: source, developmentValue: "Delete Account", comment: nil) }

      /// en translation: Are you sure you want to delete your account, all cafe data and orders will be deleted forever, this action cannot be undone?
      ///
      /// Key: delete_account_admin
      ///
      /// Locales: en, uk
      var delete_account_admin: RswiftResources.StringResource { .init(key: "delete_account_admin", tableName: "Global", source: source, developmentValue: "Are you sure you want to delete your account, all cafe data and orders will be deleted forever, this action cannot be undone?", comment: nil) }

      /// en translation: Are you sure you want to delete your account, all your data will be deleted forever, this action cannot be undone?
      ///
      /// Key: delete_account_title
      ///
      /// Locales: en, uk
      var delete_account_title: RswiftResources.StringResource { .init(key: "delete_account_title", tableName: "Global", source: source, developmentValue: "Are you sure you want to delete your account, all your data will be deleted forever, this action cannot be undone?", comment: nil) }

      /// en translation: Edit
      ///
      /// Key: edit
      ///
      /// Locales: en, uk
      var edit: RswiftResources.StringResource { .init(key: "edit", tableName: "Global", source: source, developmentValue: "Edit", comment: nil) }

      /// en translation: Edit admin
      ///
      /// Key: editAdmin
      ///
      /// Locales: en, uk
      var editAdmin: RswiftResources.StringResource { .init(key: "editAdmin", tableName: "Global", source: source, developmentValue: "Edit admin", comment: nil) }

      /// en translation: Edit wainer
      ///
      /// Key: editTechnician
      ///
      /// Locales: en, uk
      var editTechnician: RswiftResources.StringResource { .init(key: "editTechnician", tableName: "Global", source: source, developmentValue: "Edit wainer", comment: nil) }

      /// en translation: Email
      ///
      /// Key: email
      ///
      /// Locales: en, uk
      var email: RswiftResources.StringResource { .init(key: "email", tableName: "Global", source: source, developmentValue: "Email", comment: nil) }

      /// en translation: Email is not valid
      ///
      /// Key: emailInvalid
      ///
      /// Locales: en, uk
      var emailInvalid: RswiftResources.StringResource { .init(key: "emailInvalid", tableName: "Global", source: source, developmentValue: "Email is not valid", comment: nil) }

      /// en translation: Email is not valid
      ///
      /// Key: emailNotValid
      ///
      /// Locales: en, uk
      var emailNotValid: RswiftResources.StringResource { .init(key: "emailNotValid", tableName: "Global", source: source, developmentValue: "Email is not valid", comment: nil) }

      /// en translation: Email is required
      ///
      /// Key: emailRequired
      ///
      /// Locales: en, uk
      var emailRequired: RswiftResources.StringResource { .init(key: "emailRequired", tableName: "Global", source: source, developmentValue: "Email is required", comment: nil) }

      /// en translation: English
      ///
      /// Key: english
      ///
      /// Locales: en, uk
      var english: RswiftResources.StringResource { .init(key: "english", tableName: "Global", source: source, developmentValue: "English", comment: nil) }

      /// en translation: Enter the correct %@
      ///
      /// Key: enterCorrect
      ///
      /// Locales: en, uk
      var enterCorrect: RswiftResources.StringResource1<String> { .init(key: "enterCorrect", tableName: "Global", source: source, developmentValue: "Enter the correct %@", comment: nil) }

      /// en translation: Enter phone number
      ///
      /// Key: enterPhoneNumber
      ///
      /// Locales: en, uk
      var enterPhoneNumber: RswiftResources.StringResource { .init(key: "enterPhoneNumber", tableName: "Global", source: source, developmentValue: "Enter phone number", comment: nil) }

      /// en translation: Enter price
      ///
      /// Key: enterPrice
      ///
      /// Locales: en, uk
      var enterPrice: RswiftResources.StringResource { .init(key: "enterPrice", tableName: "Global", source: source, developmentValue: "Enter price", comment: nil) }

      /// en translation: Enter product's name
      ///
      /// Key: enterProductName
      ///
      /// Locales: en, uk
      var enterProductName: RswiftResources.StringResource { .init(key: "enterProductName", tableName: "Global", source: source, developmentValue: "Enter product's name", comment: nil) }

      /// en translation: Enter the name of the type of receipt
      ///
      /// Key: enterTypeName
      ///
      /// Locales: en, uk
      var enterTypeName: RswiftResources.StringResource { .init(key: "enterTypeName", tableName: "Global", source: source, developmentValue: "Enter the name of the type of receipt", comment: nil) }

      /// en translation: Error
      ///
      /// Key: error
      ///
      /// Locales: en, uk
      var error: RswiftResources.StringResource { .init(key: "error", tableName: "Global", source: source, developmentValue: "Error", comment: nil) }

      /// en translation: Something went wrong, please try again later You can send invite email from technician details screen
      ///
      /// Key: failedSentTechnicianEmail
      ///
      /// Locales: en, uk
      var failedSentTechnicianEmail: RswiftResources.StringResource { .init(key: "failedSentTechnicianEmail", tableName: "Global", source: source, developmentValue: "Something went wrong, please try again later\nYou can send invite email from technician details screen", comment: nil) }

      /// en translation: Failed to save product price
      ///
      /// Key: failedToSaveProductPrice
      ///
      /// Locales: en, uk
      var failedToSaveProductPrice: RswiftResources.StringResource { .init(key: "failedToSaveProductPrice", tableName: "Global", source: source, developmentValue: "Failed to save product price", comment: nil) }

      /// en translation: Failed to save type
      ///
      /// Key: failedToSaveType
      ///
      /// Locales: en, uk
      var failedToSaveType: RswiftResources.StringResource { .init(key: "failedToSaveType", tableName: "Global", source: source, developmentValue: "Failed to save type", comment: nil) }

      /// en translation: Feedback
      ///
      /// Key: feedback
      ///
      /// Locales: en, uk
      var feedback: RswiftResources.StringResource { .init(key: "feedback", tableName: "Global", source: source, developmentValue: "Feedback", comment: nil) }

      /// en translation: Hello,  I would like to share my feedback about the TrackMyCafe app:  [Please write your feedback and suggestions here]  App Version: %@ Device: %@ OS Version: %@ User ID: %@ User Email: %@ User Role: %@  Thank you!
      ///
      /// Key: feedbackEmailBody
      ///
      /// Locales: en, uk
      var feedbackEmailBody: RswiftResources.StringResource6<String, String, String, String, String, String> { .init(key: "feedbackEmailBody", tableName: "Global", source: source, developmentValue: "Hello,\n\nI would like to share my feedback about the TrackMyCafe app:\n\n[Please write your feedback and suggestions here]\n\nApp Version: %@\nDevice: %@\nOS Version: %@\nUser ID: %@\nUser Email: %@\nUser Role: %@\n\nThank you!", comment: nil) }

      /// en translation: TrackMyCafe App Feedback
      ///
      /// Key: feedbackEmailSubject
      ///
      /// Locales: en, uk
      var feedbackEmailSubject: RswiftResources.StringResource { .init(key: "feedbackEmailSubject", tableName: "Global", source: source, developmentValue: "TrackMyCafe App Feedback", comment: nil) }

      /// en translation: Your feedback has been sent successfully.
      ///
      /// Key: feedbackSuccessMessage
      ///
      /// Locales: en, uk
      var feedbackSuccessMessage: RswiftResources.StringResource { .init(key: "feedbackSuccessMessage", tableName: "Global", source: source, developmentValue: "Your feedback has been sent successfully.", comment: nil) }

      /// en translation: Thank You!
      ///
      /// Key: feedbackSuccessTitle
      ///
      /// Locales: en, uk
      var feedbackSuccessTitle: RswiftResources.StringResource { .init(key: "feedbackSuccessTitle", tableName: "Global", source: source, developmentValue: "Thank You!", comment: nil) }

      /// en translation: Field '%@' required
      ///
      /// Key: fieldRequired
      ///
      /// Locales: en, uk
      var fieldRequired: RswiftResources.StringResource1<String> { .init(key: "fieldRequired", tableName: "Global", source: source, developmentValue: "Field '%@' required", comment: nil) }

      /// en translation: First name
      ///
      /// Key: firstName
      ///
      /// Locales: en, uk
      var firstName: RswiftResources.StringResource { .init(key: "firstName", tableName: "Global", source: source, developmentValue: "First name", comment: nil) }

      /// en translation: First name is required
      ///
      /// Key: firstNameRequired
      ///
      /// Locales: en, uk
      var firstNameRequired: RswiftResources.StringResource { .init(key: "firstNameRequired", tableName: "Global", source: source, developmentValue: "First name is required", comment: nil) }

      /// en translation: Photo Gallery
      ///
      /// Key: gallery
      ///
      /// Locales: en, uk
      var gallery: RswiftResources.StringResource { .init(key: "gallery", tableName: "Global", source: source, developmentValue: "Photo Gallery", comment: nil) }

      /// en translation: Female
      ///
      /// Key: genderFemale
      ///
      /// Locales: en, uk
      var genderFemale: RswiftResources.StringResource { .init(key: "genderFemale", tableName: "Global", source: source, developmentValue: "Female", comment: nil) }

      /// en translation: Male
      ///
      /// Key: genderMale
      ///
      /// Locales: en, uk
      var genderMale: RswiftResources.StringResource { .init(key: "genderMale", tableName: "Global", source: source, developmentValue: "Male", comment: nil) }

      /// en translation: Not specified
      ///
      /// Key: genderNoSpecified
      ///
      /// Locales: en, uk
      var genderNoSpecified: RswiftResources.StringResource { .init(key: "genderNoSpecified", tableName: "Global", source: source, developmentValue: "Not specified", comment: nil) }

      /// en translation: General
      ///
      /// Key: general
      ///
      /// Locales: en, uk
      var general: RswiftResources.StringResource { .init(key: "general", tableName: "Global", source: source, developmentValue: "General", comment: nil) }

      /// en translation: Goods
      ///
      /// Key: goods
      ///
      /// Locales: en, uk
      var goods: RswiftResources.StringResource { .init(key: "goods", tableName: "Global", source: source, developmentValue: "Goods", comment: nil) }

      /// en translation: You have a Premium subscription, you do not need to buy or change the subscription
      ///
      /// Key: hasPremiumPlan
      ///
      /// Locales: en, uk
      var hasPremiumPlan: RswiftResources.StringResource { .init(key: "hasPremiumPlan", tableName: "Global", source: source, developmentValue: "You have a Premium subscription, you do not need to buy or change the subscription", comment: nil) }

      /// en translation: Provide access
      ///
      /// Key: isAllowCalculationForAdministrator
      ///
      /// Locales: en, uk
      var isAllowCalculationForAdministrator: RswiftResources.StringResource { .init(key: "isAllowCalculationForAdministrator", tableName: "Global", source: source, developmentValue: "Provide access", comment: nil) }

      /// en translation: You cannot cost a subscription for this cafe from the current AppleID because this cafe is already tied to another AppleID
      ///
      /// Key: labReserved
      ///
      /// Locales: en, uk
      var labReserved: RswiftResources.StringResource { .init(key: "labReserved", tableName: "Global", source: source, developmentValue: "You cannot cost a subscription for this cafe from the current AppleID because this cafe is already tied to another AppleID", comment: nil) }

      /// en translation: Languages
      ///
      /// Key: languages
      ///
      /// Locales: en, uk
      var languages: RswiftResources.StringResource { .init(key: "languages", tableName: "Global", source: source, developmentValue: "Languages", comment: nil) }

      /// en translation: Last name
      ///
      /// Key: lastName
      ///
      /// Locales: en, uk
      var lastName: RswiftResources.StringResource { .init(key: "lastName", tableName: "Global", source: source, developmentValue: "Last name", comment: nil) }

      /// en translation: Light
      ///
      /// Key: lightThemeName
      ///
      /// Locales: en, uk
      var lightThemeName: RswiftResources.StringResource { .init(key: "lightThemeName", tableName: "Global", source: source, developmentValue: "Light", comment: nil) }

      /// en translation: Please configure a mail account in your device settings to send feedback.
      ///
      /// Key: mailNotAvailableMessage
      ///
      /// Locales: en, uk
      var mailNotAvailableMessage: RswiftResources.StringResource { .init(key: "mailNotAvailableMessage", tableName: "Global", source: source, developmentValue: "Please configure a mail account in your device settings to send feedback.", comment: nil) }

      /// en translation: Mail Not Available
      ///
      /// Key: mailNotAvailableTitle
      ///
      /// Locales: en, uk
      var mailNotAvailableTitle: RswiftResources.StringResource { .init(key: "mailNotAvailableTitle", tableName: "Global", source: source, developmentValue: "Mail Not Available", comment: nil) }

      /// en translation: Manage subscriptions
      ///
      /// Key: manageSubscriptions
      ///
      /// Locales: en, uk
      var manageSubscriptions: RswiftResources.StringResource { .init(key: "manageSubscriptions", tableName: "Global", source: source, developmentValue: "Manage subscriptions", comment: nil) }

      /// en translation: Buy subscription
      ///
      /// Key: menuBuySub
      ///
      /// Locales: en, uk
      var menuBuySub: RswiftResources.StringResource { .init(key: "menuBuySub", tableName: "Global", source: source, developmentValue: "Buy subscription", comment: nil) }

      /// en translation: Settings
      ///
      /// Key: menuSettings
      ///
      /// Locales: en, uk
      var menuSettings: RswiftResources.StringResource { .init(key: "menuSettings", tableName: "Global", source: source, developmentValue: "Settings", comment: nil) }

      /// en translation: Staff
      ///
      /// Key: menuStaff
      ///
      /// Locales: en, uk
      var menuStaff: RswiftResources.StringResource { .init(key: "menuStaff", tableName: "Global", source: source, developmentValue: "Staff", comment: nil) }

      /// en translation: Your subscription has expired. To continue using the application you need to buy a subscription
      ///
      /// Key: menuSubExpired
      ///
      /// Locales: en, uk
      var menuSubExpired: RswiftResources.StringResource { .init(key: "menuSubExpired", tableName: "Global", source: source, developmentValue: "Your subscription has expired. To continue using the application you need to buy a subscription", comment: nil) }

      /// en translation: Your subscription has expired, please contact your administrator to renew your subscription
      ///
      /// Key: menuSubTech
      ///
      /// Locales: en, uk
      var menuSubTech: RswiftResources.StringResource { .init(key: "menuSubTech", tableName: "Global", source: source, developmentValue: "Your subscription has expired, please contact your administrator to renew your subscription", comment: nil) }

      /// en translation: Middle name
      ///
      /// Key: middleName
      ///
      /// Locales: en, uk
      var middleName: RswiftResources.StringResource { .init(key: "middleName", tableName: "Global", source: source, developmentValue: "Middle name", comment: nil) }

      /// en translation: Money1
      ///
      /// Key: money1
      ///
      /// Locales: en, uk
      var money1: RswiftResources.StringResource { .init(key: "money1", tableName: "Global", source: source, developmentValue: "Money1", comment: nil) }

      /// en translation: Money2
      ///
      /// Key: money2
      ///
      /// Locales: en, uk
      var money2: RswiftResources.StringResource { .init(key: "money2", tableName: "Global", source: source, developmentValue: "Money2", comment: nil) }

      /// en translation: Money3
      ///
      /// Key: money3
      ///
      /// Locales: en, uk
      var money3: RswiftResources.StringResource { .init(key: "money3", tableName: "Global", source: source, developmentValue: "Money3", comment: nil) }

      /// en translation: Month
      ///
      /// Key: month
      ///
      /// Locales: en, uk
      var month: RswiftResources.StringResource { .init(key: "month", tableName: "Global", source: source, developmentValue: "Month", comment: nil) }

      /// en translation: Name
      ///
      /// Key: names
      ///
      /// Locales: en, uk
      var names: RswiftResources.StringResource { .init(key: "names", tableName: "Global", source: source, developmentValue: "Name", comment: nil) }

      /// en translation: New moderator
      ///
      /// Key: newModerator
      ///
      /// Locales: en, uk
      var newModerator: RswiftResources.StringResource { .init(key: "newModerator", tableName: "Global", source: source, developmentValue: "New moderator", comment: nil) }

      /// en translation: New waiter
      ///
      /// Key: newTechnician
      ///
      /// Locales: en, uk
      var newTechnician: RswiftResources.StringResource { .init(key: "newTechnician", tableName: "Global", source: source, developmentValue: "New waiter", comment: nil) }

      /// en translation: not required
      ///
      /// Key: noRequired
      ///
      /// Locales: en, uk
      var noRequired: RswiftResources.StringResource { .init(key: "noRequired", tableName: "Global", source: source, developmentValue: "not required", comment: nil) }

      /// en translation: Not specified
      ///
      /// Key: noSpecified
      ///
      /// Locales: en, uk
      var noSpecified: RswiftResources.StringResource { .init(key: "noSpecified", tableName: "Global", source: source, developmentValue: "Not specified", comment: nil) }

      /// en translation: Note
      ///
      /// Key: note
      ///
      /// Locales: en, uk
      var note: RswiftResources.StringResource { .init(key: "note", tableName: "Global", source: source, developmentValue: "Note", comment: nil) }

      /// en translation: OK
      ///
      /// Key: okButton
      ///
      /// Locales: en, uk
      var okButton: RswiftResources.StringResource { .init(key: "okButton", tableName: "Global", source: source, developmentValue: "OK", comment: nil) }

      /// en translation: Order
      ///
      /// Key: order
      ///
      /// Locales: en, uk
      var order: RswiftResources.StringResource { .init(key: "order", tableName: "Global", source: source, developmentValue: "Order", comment: nil) }

      /// en translation: Orders
      ///
      /// Key: orders
      ///
      /// Locales: en, uk
      var orders: RswiftResources.StringResource { .init(key: "orders", tableName: "Global", source: source, developmentValue: "Orders", comment: nil) }

      /// en translation: Password
      ///
      /// Key: password
      ///
      /// Locales: en, uk
      var password: RswiftResources.StringResource { .init(key: "password", tableName: "Global", source: source, developmentValue: "Password", comment: nil) }

      /// en translation: Passwords do not match
      ///
      /// Key: passwordNotMatch
      ///
      /// Locales: en, uk
      var passwordNotMatch: RswiftResources.StringResource { .init(key: "passwordNotMatch", tableName: "Global", source: source, developmentValue: "Passwords do not match", comment: nil) }

      /// en translation: Password must contain at least 6 characters
      ///
      /// Key: passwordValidateDesc
      ///
      /// Locales: en, uk
      var passwordValidateDesc: RswiftResources.StringResource { .init(key: "passwordValidateDesc", tableName: "Global", source: source, developmentValue: "Password must contain at least 6 characters", comment: nil) }

      /// en translation: Phone
      ///
      /// Key: phone
      ///
      /// Locales: en, uk
      var phone: RswiftResources.StringResource { .init(key: "phone", tableName: "Global", source: source, developmentValue: "Phone", comment: nil) }

      /// en translation: Plan
      ///
      /// Key: plan
      ///
      /// Locales: en, uk
      var plan: RswiftResources.StringResource { .init(key: "plan", tableName: "Global", source: source, developmentValue: "Plan", comment: nil) }

      /// en translation: Please enter product name
      ///
      /// Key: pleaseEnterProductName
      ///
      /// Locales: en, uk
      var pleaseEnterProductName: RswiftResources.StringResource { .init(key: "pleaseEnterProductName", tableName: "Global", source: source, developmentValue: "Please enter product name", comment: nil) }

      /// en translation: Please enter the type name
      ///
      /// Key: pleaseEnterTypeName
      ///
      /// Locales: en, uk
      var pleaseEnterTypeName: RswiftResources.StringResource { .init(key: "pleaseEnterTypeName", tableName: "Global", source: source, developmentValue: "Please enter the type name", comment: nil) }

      /// en translation: Price
      ///
      /// Key: price
      ///
      /// Locales: en, uk
      var price: RswiftResources.StringResource { .init(key: "price", tableName: "Global", source: source, developmentValue: "Price", comment: nil) }

      /// en translation: Prices
      ///
      /// Key: prices
      ///
      /// Locales: en, uk
      var prices: RswiftResources.StringResource { .init(key: "prices", tableName: "Global", source: source, developmentValue: "Prices", comment: nil) }

      /// en translation: For client
      ///
      /// Key: printForDoctor
      ///
      /// Locales: en, uk
      var printForDoctor: RswiftResources.StringResource { .init(key: "printForDoctor", tableName: "Global", source: source, developmentValue: "For client", comment: nil) }

      /// en translation: For waiter
      ///
      /// Key: printForTechnician
      ///
      /// Locales: en, uk
      var printForTechnician: RswiftResources.StringResource { .init(key: "printForTechnician", tableName: "Global", source: source, developmentValue: "For waiter", comment: nil) }

      /// en translation: Print for whom?
      ///
      /// Key: printForWhom
      ///
      /// Locales: en, uk
      var printForWhom: RswiftResources.StringResource { .init(key: "printForWhom", tableName: "Global", source: source, developmentValue: "Print for whom?", comment: nil) }

      /// en translation: Print Prices
      ///
      /// Key: printPrices
      ///
      /// Locales: en, uk
      var printPrices: RswiftResources.StringResource { .init(key: "printPrices", tableName: "Global", source: source, developmentValue: "Print Prices", comment: nil) }

      /// en translation: Privacy policy
      ///
      /// Key: privacyPolicy
      ///
      /// Locales: en, uk
      var privacyPolicy: RswiftResources.StringResource { .init(key: "privacyPolicy", tableName: "Global", source: source, developmentValue: "Privacy policy", comment: nil) }

      /// en translation: Product
      ///
      /// Key: product
      ///
      /// Locales: en, uk
      var product: RswiftResources.StringResource { .init(key: "product", tableName: "Global", source: source, developmentValue: "Product", comment: nil) }

      /// en translation: Product name
      ///
      /// Key: productName
      ///
      /// Locales: en, uk
      var productName: RswiftResources.StringResource { .init(key: "productName", tableName: "Global", source: source, developmentValue: "Product name", comment: nil) }

      /// en translation: Products
      ///
      /// Key: products
      ///
      /// Locales: en, uk
      var products: RswiftResources.StringResource { .init(key: "products", tableName: "Global", source: source, developmentValue: "Products", comment: nil) }

      /// en translation: Purchases resumed successfully
      ///
      /// Key: purchaseRestored
      ///
      /// Locales: en, uk
      var purchaseRestored: RswiftResources.StringResource { .init(key: "purchaseRestored", tableName: "Global", source: source, developmentValue: "Purchases resumed successfully", comment: nil) }

      /// en translation: Please try again
      ///
      /// Key: repeatAgain
      ///
      /// Locales: en, uk
      var repeatAgain: RswiftResources.StringResource { .init(key: "repeatAgain", tableName: "Global", source: source, developmentValue: "Please try again", comment: nil) }

      /// en translation: required
      ///
      /// Key: required
      ///
      /// Locales: en, uk
      var required: RswiftResources.StringResource { .init(key: "required", tableName: "Global", source: source, developmentValue: "required", comment: nil) }

      /// en translation: Required data is missing in user settings.
      ///
      /// Key: requiredDataIsMissingInUserSettings
      ///
      /// Locales: en, uk
      var requiredDataIsMissingInUserSettings: RswiftResources.StringResource { .init(key: "requiredDataIsMissingInUserSettings", tableName: "Global", source: source, developmentValue: "Required data is missing in user settings.", comment: nil) }

      /// en translation: Resend Invite
      ///
      /// Key: resendInvite
      ///
      /// Locales: en, uk
      var resendInvite: RswiftResources.StringResource { .init(key: "resendInvite", tableName: "Global", source: source, developmentValue: "Resend Invite", comment: nil) }

      /// en translation: Restore purchases
      ///
      /// Key: restorePurchases
      ///
      /// Locales: en, uk
      var restorePurchases: RswiftResources.StringResource { .init(key: "restorePurchases", tableName: "Global", source: source, developmentValue: "Restore purchases", comment: nil) }

      /// en translation: Retry
      ///
      /// Key: retry
      ///
      /// Locales: en, uk
      var retry: RswiftResources.StringResource { .init(key: "retry", tableName: "Global", source: source, developmentValue: "Retry", comment: nil) }

      /// en translation: Admin
      ///
      /// Key: roleAdmin
      ///
      /// Locales: en, uk
      var roleAdmin: RswiftResources.StringResource { .init(key: "roleAdmin", tableName: "Global", source: source, developmentValue: "Admin", comment: nil) }

      /// en translation: Moderator
      ///
      /// Key: roleModerator
      ///
      /// Locales: en, uk
      var roleModerator: RswiftResources.StringResource { .init(key: "roleModerator", tableName: "Global", source: source, developmentValue: "Moderator", comment: nil) }

      /// en translation: Waiter & Moderator
      ///
      /// Key: roleTechMod
      ///
      /// Locales: en, uk
      var roleTechMod: RswiftResources.StringResource { .init(key: "roleTechMod", tableName: "Global", source: source, developmentValue: "Waiter & Moderator", comment: nil) }

      /// en translation: Waiter
      ///
      /// Key: roleTechnician
      ///
      /// Locales: en, uk
      var roleTechnician: RswiftResources.StringResource { .init(key: "roleTechnician", tableName: "Global", source: source, developmentValue: "Waiter", comment: nil) }

      /// en translation: Sales
      ///
      /// Key: sales
      ///
      /// Locales: en, uk
      var sales: RswiftResources.StringResource { .init(key: "sales", tableName: "Global", source: source, developmentValue: "Sales", comment: nil) }

      /// en translation: Save
      ///
      /// Key: save
      ///
      /// Locales: en, uk
      var save: RswiftResources.StringResource { .init(key: "save", tableName: "Global", source: source, developmentValue: "Save", comment: nil) }

      /// en translation: Search
      ///
      /// Key: search
      ///
      /// Locales: en, uk
      var search: RswiftResources.StringResource { .init(key: "search", tableName: "Global", source: source, developmentValue: "Search", comment: nil) }

      /// en translation: Select Theme
      ///
      /// Key: selectTheme
      ///
      /// Locales: en, uk
      var selectTheme: RswiftResources.StringResource { .init(key: "selectTheme", tableName: "Global", source: source, developmentValue: "Select Theme", comment: nil) }

      /// en translation: Failed to send feedback. Please try again later.
      ///
      /// Key: sendFailedMessage
      ///
      /// Locales: en, uk
      var sendFailedMessage: RswiftResources.StringResource { .init(key: "sendFailedMessage", tableName: "Global", source: source, developmentValue: "Failed to send feedback. Please try again later.", comment: nil) }

      /// en translation: Send Failed
      ///
      /// Key: sendFailedTitle
      ///
      /// Locales: en, uk
      var sendFailedTitle: RswiftResources.StringResource { .init(key: "sendFailedTitle", tableName: "Global", source: source, developmentValue: "Send Failed", comment: nil) }

      /// en translation: Something went wrong
      ///
      /// Key: somethingWentWrong
      ///
      /// Locales: en, uk
      var somethingWentWrong: RswiftResources.StringResource { .init(key: "somethingWentWrong", tableName: "Global", source: source, developmentValue: "Something went wrong", comment: nil) }

      /// en translation: Senior waiters
      ///
      /// Key: staff_sectionSeniorWaiter
      ///
      /// Locales: en, uk
      var staff_sectionSeniorWaiter: RswiftResources.StringResource { .init(key: "staff_sectionSeniorWaiter", tableName: "Global", source: source, developmentValue: "Senior waiters", comment: nil) }

      /// en translation: Waiters
      ///
      /// Key: staff_sectionWaiter
      ///
      /// Locales: en, uk
      var staff_sectionWaiter: RswiftResources.StringResource { .init(key: "staff_sectionWaiter", tableName: "Global", source: source, developmentValue: "Waiters", comment: nil) }

      /// en translation: Start over
      ///
      /// Key: startOver
      ///
      /// Locales: en, uk
      var startOver: RswiftResources.StringResource { .init(key: "startOver", tableName: "Global", source: source, developmentValue: "Start over", comment: nil) }

      /// en translation: Cafe with up to twenty staff members, including an administrator and moderator
      ///
      /// Key: subPlanBigDescription
      ///
      /// Locales: en, uk
      var subPlanBigDescription: RswiftResources.StringResource { .init(key: "subPlanBigDescription", tableName: "Global", source: source, developmentValue: "Cafe with up to twenty staff members, including an administrator and moderator", comment: nil) }

      /// en translation: Big
      ///
      /// Key: subPlanBigName
      ///
      /// Locales: en, uk
      var subPlanBigName: RswiftResources.StringResource { .init(key: "subPlanBigName", tableName: "Global", source: source, developmentValue: "Big", comment: nil) }

      /// en translation: Cafe with up to thirty staff members, including an administrator and moderator
      ///
      /// Key: subPlanMaxiDescription
      ///
      /// Locales: en, uk
      var subPlanMaxiDescription: RswiftResources.StringResource { .init(key: "subPlanMaxiDescription", tableName: "Global", source: source, developmentValue: "Cafe with up to thirty staff members, including an administrator and moderator", comment: nil) }

      /// en translation: Maxi
      ///
      /// Key: subPlanMaxiName
      ///
      /// Locales: en, uk
      var subPlanMaxiName: RswiftResources.StringResource { .init(key: "subPlanMaxiName", tableName: "Global", source: source, developmentValue: "Maxi", comment: nil) }

      /// en translation: Cafe with up to twelve staff members, including an administrator and moderator
      ///
      /// Key: subPlanMidDescription
      ///
      /// Locales: en, uk
      var subPlanMidDescription: RswiftResources.StringResource { .init(key: "subPlanMidDescription", tableName: "Global", source: source, developmentValue: "Cafe with up to twelve staff members, including an administrator and moderator", comment: nil) }

      /// en translation: Mid
      ///
      /// Key: subPlanMidName
      ///
      /// Locales: en, uk
      var subPlanMidName: RswiftResources.StringResource { .init(key: "subPlanMidName", tableName: "Global", source: source, developmentValue: "Mid", comment: nil) }

      /// en translation: A small café with no more than two staff members
      ///
      /// Key: subPlanMiniDescription
      ///
      /// Locales: en, uk
      var subPlanMiniDescription: RswiftResources.StringResource { .init(key: "subPlanMiniDescription", tableName: "Global", source: source, developmentValue: "A small café with no more than two staff members", comment: nil) }

      /// en translation: Mini
      ///
      /// Key: subPlanMiniName
      ///
      /// Locales: en, uk
      var subPlanMiniName: RswiftResources.StringResource { .init(key: "subPlanMiniName", tableName: "Global", source: source, developmentValue: "Mini", comment: nil) }

      /// en translation: No subscription
      ///
      /// Key: subPlanNoneDescription
      ///
      /// Locales: en, uk
      var subPlanNoneDescription: RswiftResources.StringResource { .init(key: "subPlanNoneDescription", tableName: "Global", source: source, developmentValue: "No subscription", comment: nil) }

      /// en translation: No subscription
      ///
      /// Key: subPlanNoneName
      ///
      /// Locales: en, uk
      var subPlanNoneName: RswiftResources.StringResource { .init(key: "subPlanNoneName", tableName: "Global", source: source, developmentValue: "No subscription", comment: nil) }

      /// en translation: Cafes with no more than five staff members, including the administrator and moderator
      ///
      /// Key: subPlanPentaDescription
      ///
      /// Locales: en, uk
      var subPlanPentaDescription: RswiftResources.StringResource { .init(key: "subPlanPentaDescription", tableName: "Global", source: source, developmentValue: "Cafes with no more than five staff members, including the administrator and moderator", comment: nil) }

      /// en translation: Penta
      ///
      /// Key: subPlanPentaName
      ///
      /// Locales: en, uk
      var subPlanPentaName: RswiftResources.StringResource { .init(key: "subPlanPentaName", tableName: "Global", source: source, developmentValue: "Penta", comment: nil) }

      /// en translation: There are no limits
      ///
      /// Key: subPlanPremiumDescription
      ///
      /// Locales: en, uk
      var subPlanPremiumDescription: RswiftResources.StringResource { .init(key: "subPlanPremiumDescription", tableName: "Global", source: source, developmentValue: "There are no limits", comment: nil) }

      /// en translation: Premium
      ///
      /// Key: subPlanPremiumName
      ///
      /// Locales: en, uk
      var subPlanPremiumName: RswiftResources.StringResource { .init(key: "subPlanPremiumName", tableName: "Global", source: source, developmentValue: "Premium", comment: nil) }

      /// en translation: For single user
      ///
      /// Key: subPlanSingleDescription
      ///
      /// Locales: en, uk
      var subPlanSingleDescription: RswiftResources.StringResource { .init(key: "subPlanSingleDescription", tableName: "Global", source: source, developmentValue: "For single user", comment: nil) }

      /// en translation: Single
      ///
      /// Key: subPlanSingleName
      ///
      /// Locales: en, uk
      var subPlanSingleName: RswiftResources.StringResource { .init(key: "subPlanSingleName", tableName: "Global", source: source, developmentValue: "Single", comment: nil) }

      /// en translation: Subscription
      ///
      /// Key: subscription
      ///
      /// Locales: en, uk
      var subscription: RswiftResources.StringResource { .init(key: "subscription", tableName: "Global", source: source, developmentValue: "Subscription", comment: nil) }

      /// en translation: You can change your subscription to one that is best for your cafe at any time
      ///
      /// Key: subscriptionDefaultHeader
      ///
      /// Locales: en, uk
      var subscriptionDefaultHeader: RswiftResources.StringResource { .init(key: "subscriptionDefaultHeader", tableName: "Global", source: source, developmentValue: "You can change your subscription to one that is best for your cafe at any time", comment: nil) }

      /// en translation: Your subscription has expired. To continue using the application you need to buy a subscription, if you already have a costd subscription, click "Restore costs"
      ///
      /// Key: subscriptionExpiredHeader
      ///
      /// Locales: en, uk
      var subscriptionExpiredHeader: RswiftResources.StringResource { .init(key: "subscriptionExpiredHeader", tableName: "Global", source: source, developmentValue: "Your subscription has expired. To continue using the application you need to buy a subscription, if you already have a costd subscription, click \"Restore costs\"", comment: nil) }

      /// en translation: Subscription is required to get access to application. Every type of subscription include 1 month free trial. The trial period is provided only once.   After the free trial period the subscription automatically renews with the price and duration given above unless it is canceled at least 24 hours before the end of the trial month.  Payment will be charged to your Apple ID account at the confirmation of cost. Your account will be charged for renewal within 24 hours prior to the end of the current period. You can manage and cancel your subscriptions by going to your account settings on the App Store after cost.
      ///
      /// Key: subscriptionFooter1
      ///
      /// Locales: en, uk
      var subscriptionFooter1: RswiftResources.StringResource { .init(key: "subscriptionFooter1", tableName: "Global", source: source, developmentValue: "Subscription is required to get access to application. Every type of subscription include 1 month free trial. The trial period is provided only once. \n\nAfter the free trial period the subscription automatically renews with the price and duration given above unless it is canceled at least 24 hours before the end of the trial month.\n\nPayment will be charged to your Apple ID account at the confirmation of cost. Your account will be charged for renewal within 24 hours prior to the end of the current period. You can manage and cancel your subscriptions by going to your account settings on the App Store after cost.", comment: nil) }

      /// en translation: Removing the app doesn't automatically cancel the subscription.
      ///
      /// Key: subscriptionFooter2
      ///
      /// Locales: en, uk
      var subscriptionFooter2: RswiftResources.StringResource { .init(key: "subscriptionFooter2", tableName: "Global", source: source, developmentValue: "Removing the app doesn't automatically cancel the subscription.", comment: nil) }

      /// en translation: To continue working with the application, buy a subscription, or if you already have a subscription, you can renew it by clicking on the "Restore Costs"
      ///
      /// Key: subscriptionNeedSubHeader
      ///
      /// Locales: en, uk
      var subscriptionNeedSubHeader: RswiftResources.StringResource { .init(key: "subscriptionNeedSubHeader", tableName: "Global", source: source, developmentValue: "To continue working with the application, buy a subscription, or if you already have a subscription, you can renew it by clicking on the \"Restore Costs\"", comment: nil) }

      /// en translation: Subscription options
      ///
      /// Key: subscriptionOptions
      ///
      /// Locales: en, uk
      var subscriptionOptions: RswiftResources.StringResource { .init(key: "subscriptionOptions", tableName: "Global", source: source, developmentValue: "Subscription options", comment: nil) }

      /// en translation: Your current subscription does not allow more staff to be added to your cafe. You can change the subscription to the one that best suits your cafe
      ///
      /// Key: subscriptionReachedHeader
      ///
      /// Locales: en, uk
      var subscriptionReachedHeader: RswiftResources.StringResource { .init(key: "subscriptionReachedHeader", tableName: "Global", source: source, developmentValue: "Your current subscription does not allow more staff to be added to your cafe. You can change the subscription to the one that best suits your cafe", comment: nil) }

      /// en translation: Success
      ///
      /// Key: success
      ///
      /// Locales: en, uk
      var success: RswiftResources.StringResource { .init(key: "success", tableName: "Global", source: source, developmentValue: "Success", comment: nil) }

      /// en translation: Congratulations, you have successfully costd a subscription
      ///
      /// Key: successPurchase
      ///
      /// Locales: en, uk
      var successPurchase: RswiftResources.StringResource { .init(key: "successPurchase", tableName: "Global", source: source, developmentValue: "Congratulations, you have successfully costd a subscription", comment: nil) }

      /// en translation: Sign-in link has been sent to technician's email: %@
      ///
      /// Key: successSentTechnicianEmail
      ///
      /// Locales: en, uk
      var successSentTechnicianEmail: RswiftResources.StringResource1<String> { .init(key: "successSentTechnicianEmail", tableName: "Global", source: source, developmentValue: "Sign-in link has been sent to technician's email: %@", comment: nil) }

      /// en translation: Automatic
      ///
      /// Key: systemThemeName
      ///
      /// Locales: en, uk
      var systemThemeName: RswiftResources.StringResource { .init(key: "systemThemeName", tableName: "Global", source: source, developmentValue: "Automatic", comment: nil) }

      /// en translation: You cannot create a waiter with this email address because a user with this email address is already registered in the system.
      ///
      /// Key: technicianEmailAlreadyExist
      ///
      /// Locales: en, uk
      var technicianEmailAlreadyExist: RswiftResources.StringResource { .init(key: "technicianEmailAlreadyExist", tableName: "Global", source: source, developmentValue: "You cannot create a waiter with this email address because a user with this email address is already registered in the system.", comment: nil) }

      /// en translation: Your current subscription does not allow more staff to be added to your cafe. You can change your subscription:
      ///
      /// Key: technicianLimitReached
      ///
      /// Locales: en, uk
      var technicianLimitReached: RswiftResources.StringResource { .init(key: "technicianLimitReached", tableName: "Global", source: source, developmentValue: "Your current subscription does not allow more staff to be added to your cafe. You can change your subscription:", comment: nil) }

      /// en translation: Technician's note goes here.
      ///
      /// Key: technicianNoteGoesHere
      ///
      /// Locales: en, uk
      var technicianNoteGoesHere: RswiftResources.StringResource { .init(key: "technicianNoteGoesHere", tableName: "Global", source: source, developmentValue: "Technician's note goes here.", comment: nil) }

      /// en translation: Terms of use
      ///
      /// Key: termsOfUse
      ///
      /// Locales: en, uk
      var termsOfUse: RswiftResources.StringResource { .init(key: "termsOfUse", tableName: "Global", source: source, developmentValue: "Terms of use", comment: nil) }

      /// en translation: Transfer
      ///
      /// Key: transfer
      ///
      /// Locales: en, uk
      var transfer: RswiftResources.StringResource { .init(key: "transfer", tableName: "Global", source: source, developmentValue: "Transfer", comment: nil) }

      /// en translation: Transfer accumulated data or start fresh?
      ///
      /// Key: transferDataDescription
      ///
      /// Locales: en, uk
      var transferDataDescription: RswiftResources.StringResource { .init(key: "transferDataDescription", tableName: "Global", source: source, developmentValue: "Transfer accumulated data or start fresh?", comment: nil) }

      /// en translation: Transfer Data
      ///
      /// Key: transferDataTitle
      ///
      /// Locales: en, uk
      var transferDataTitle: RswiftResources.StringResource { .init(key: "transferDataTitle", tableName: "Global", source: source, developmentValue: "Transfer Data", comment: nil) }

      /// en translation: Transferring data...
      ///
      /// Key: transferingData
      ///
      /// Locales: en, uk
      var transferingData: RswiftResources.StringResource { .init(key: "transferingData", tableName: "Global", source: source, developmentValue: "Transferring data...", comment: nil) }

      /// en translation: Type
      ///
      /// Key: type
      ///
      /// Locales: en, uk
      var type: RswiftResources.StringResource { .init(key: "type", tableName: "Global", source: source, developmentValue: "Type", comment: nil) }

      /// en translation: Types
      ///
      /// Key: types
      ///
      /// Locales: en, uk
      var types: RswiftResources.StringResource { .init(key: "types", tableName: "Global", source: source, developmentValue: "Types", comment: nil) }

      /// en translation: Ukrainian
      ///
      /// Key: ukrainian
      ///
      /// Locales: en, uk
      var ukrainian: RswiftResources.StringResource { .init(key: "ukrainian", tableName: "Global", source: source, developmentValue: "Ukrainian", comment: nil) }

      /// en translation: Uploaded new technician image at %@
      ///
      /// Key: uploadedNewTechnicianImageAt
      ///
      /// Locales: en, uk
      var uploadedNewTechnicianImageAt: RswiftResources.StringResource1<String> { .init(key: "uploadedNewTechnicianImageAt", tableName: "Global", source: source, developmentValue: "Uploaded new technician image at %@", comment: nil) }

      /// en translation: Warning
      ///
      /// Key: warning
      ///
      /// Locales: en, uk
      var warning: RswiftResources.StringResource { .init(key: "warning", tableName: "Global", source: source, developmentValue: "Warning", comment: nil) }

      /// en translation: Something went wrong
      ///
      /// Key: wentWrong
      ///
      /// Locales: en, uk
      var wentWrong: RswiftResources.StringResource { .init(key: "wentWrong", tableName: "Global", source: source, developmentValue: "Something went wrong", comment: nil) }

      /// en translation: Something went wrong, please try again later
      ///
      /// Key: wentWrongTryAgain
      ///
      /// Locales: en, uk
      var wentWrongTryAgain: RswiftResources.StringResource { .init(key: "wentWrongTryAgain", tableName: "Global", source: source, developmentValue: "Something went wrong, please try again later", comment: nil) }
    }
  }

  /// This `_R.color` struct is generated, and contains static references to 9 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: RswiftResources.ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }

    /// Color `CellBackground`.
    var cellBackground: RswiftResources.ColorResource { .init(name: "CellBackground", path: [], bundle: bundle) }

    /// Color `NavBarBackground`.
    var navBarBackground: RswiftResources.ColorResource { .init(name: "NavBarBackground", path: [], bundle: bundle) }

    /// Color `NavBarText`.
    var navBarText: RswiftResources.ColorResource { .init(name: "NavBarText", path: [], bundle: bundle) }

    /// Color `PrimaryBackground`.
    var primaryBackground: RswiftResources.ColorResource { .init(name: "PrimaryBackground", path: [], bundle: bundle) }

    /// Color `PrimaryText`.
    var primaryText: RswiftResources.ColorResource { .init(name: "PrimaryText", path: [], bundle: bundle) }

    /// Color `SecondaryBackground`.
    var secondaryBackground: RswiftResources.ColorResource { .init(name: "SecondaryBackground", path: [], bundle: bundle) }

    /// Color `SecondaryText`.
    var secondaryText: RswiftResources.ColorResource { .init(name: "SecondaryText", path: [], bundle: bundle) }

    /// Color `TabBarTint`.
    var tabBarTint: RswiftResources.ColorResource { .init(name: "TabBarTint", path: [], bundle: bundle) }
  }

  /// This `_R.image` struct is generated, and contains static references to 19 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `GoodsPriceModel`.
    var goodsPriceModel: RswiftResources.ImageResource { .init(name: "GoodsPriceModel", path: [], bundle: bundle, locale: LocaleReference.none, onDemandResourceTags: nil) }

    /// Image `PurchaseModel`.
    var purchaseModel: RswiftResources.ImageResource { .init(name: "PurchaseModel", path: [], bundle: bundle, locale: LocaleReference.none, onDemandResourceTags: nil) }

    /// Image `SaleGoodModel`.
    var saleGoodModel: RswiftResources.ImageResource { .init(name: "SaleGoodModel", path: [], bundle: bundle, locale: LocaleReference.none, onDemandResourceTags: nil) }

    /// Image `SalesModel`.
    var salesModel: RswiftResources.ImageResource { .init(name: "SalesModel", path: [], bundle: bundle, locale: LocaleReference.none, onDemandResourceTags: nil) }

    /// Image `Screenshot1`.
    var screenshot1: RswiftResources.ImageResource { .init(name: "Screenshot1", path: [], bundle: bundle, locale: LocaleReference.none, onDemandResourceTags: nil) }

    /// Image `TypeOfDonationModel`.
    var typeOfDonationModel: RswiftResources.ImageResource { .init(name: "TypeOfDonationModel", path: [], bundle: bundle, locale: LocaleReference.none, onDemandResourceTags: nil) }

    /// Image `app-big-logo`.
    var appBigLogo: RswiftResources.ImageResource { .init(name: "app-big-logo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `app-logo`.
    var appLogo: RswiftResources.ImageResource { .init(name: "app-logo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `back`.
    var back: RswiftResources.ImageResource { .init(name: "back", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `call`.
    var call: RswiftResources.ImageResource { .init(name: "call", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `checkmark`.
    var checkmark: RswiftResources.ImageResource { .init(name: "checkmark", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `delete`.
    var delete: RswiftResources.ImageResource { .init(name: "delete", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `edit`.
    var edit: RswiftResources.ImageResource { .init(name: "edit", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `exit`.
    var exit: RswiftResources.ImageResource { .init(name: "exit", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `face-id`.
    var faceId: RswiftResources.ImageResource { .init(name: "face-id", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mail`.
    var mail: RswiftResources.ImageResource { .init(name: "mail", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `profile-placeholder`.
    var profilePlaceholder: RswiftResources.ImageResource { .init(name: "profile-placeholder", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `set-password`.
    var setPassword: RswiftResources.ImageResource { .init(name: "set-password", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `touch-id`.
    var touchId: RswiftResources.ImageResource { .init(name: "touch-id", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.info` struct is generated, and contains static references to 1 properties.
  struct info {
    let bundle: Foundation.Bundle
    var uiApplicationSceneManifest: uiApplicationSceneManifest { .init(bundle: bundle) }

    func uiApplicationSceneManifest(bundle: Foundation.Bundle) -> uiApplicationSceneManifest {
      .init(bundle: bundle)
    }

    struct uiApplicationSceneManifest {
      let bundle: Foundation.Bundle

      let uiApplicationSupportsMultipleScenes: Bool = false

      var _key: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest"], key: "_key") ?? "UIApplicationSceneManifest" }
      var uiSceneConfigurations: uiSceneConfigurations { .init(bundle: bundle) }

      func uiSceneConfigurations(bundle: Foundation.Bundle) -> uiSceneConfigurations {
        .init(bundle: bundle)
      }

      struct uiSceneConfigurations {
        let bundle: Foundation.Bundle
        var _key: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations"], key: "_key") ?? "UISceneConfigurations" }
        var uiWindowSceneSessionRoleApplication: uiWindowSceneSessionRoleApplication { .init(bundle: bundle) }

        func uiWindowSceneSessionRoleApplication(bundle: Foundation.Bundle) -> uiWindowSceneSessionRoleApplication {
          .init(bundle: bundle)
        }

        struct uiWindowSceneSessionRoleApplication {
          let bundle: Foundation.Bundle
          var defaultConfiguration: defaultConfiguration { .init(bundle: bundle) }

          func defaultConfiguration(bundle: Foundation.Bundle) -> defaultConfiguration {
            .init(bundle: bundle)
          }

          struct defaultConfiguration {
            let bundle: Foundation.Bundle
            var uiSceneConfigurationName: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneConfigurationName") ?? "Default Configuration" }
            var uiSceneDelegateClassName: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneDelegateClassName") ?? "$(PRODUCT_MODULE_NAME).SceneDelegate" }
          }
        }
      }
    }
  }

  /// This `_R.file` struct is generated, and contains static references to 10 resource files.
  struct file {
    let bundle: Foundation.Bundle

    /// Resource file `Additional materials`.
    var additionalMaterials: RswiftResources.FileResource { .init(name: "Additional materials", pathExtension: "", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Config.plist`.
    var configPlist: RswiftResources.FileResource { .init(name: "Config", pathExtension: "plist", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `GoodsPriceModel.png`.
    var goodsPriceModelPng: RswiftResources.FileResource { .init(name: "GoodsPriceModel", pathExtension: "png", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `GoogleService-Info.plist`.
    var googleServiceInfoPlist: RswiftResources.FileResource { .init(name: "GoogleService-Info", pathExtension: "plist", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `PurchaseModel.png`.
    var purchaseModelPng: RswiftResources.FileResource { .init(name: "PurchaseModel", pathExtension: "png", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `README.md`.
    var readmeMd: RswiftResources.FileResource { .init(name: "README", pathExtension: "md", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `SaleGoodModel.png`.
    var saleGoodModelPng: RswiftResources.FileResource { .init(name: "SaleGoodModel", pathExtension: "png", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `SalesModel.png`.
    var salesModelPng: RswiftResources.FileResource { .init(name: "SalesModel", pathExtension: "png", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Screenshot1.png`.
    var screenshot1Png: RswiftResources.FileResource { .init(name: "Screenshot1", pathExtension: "png", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `TypeOfDonationModel.png`.
    var typeOfDonationModelPng: RswiftResources.FileResource { .init(name: "TypeOfDonationModel", pathExtension: "png", bundle: bundle, locale: LocaleReference.none) }
  }
}